#summary jsLint Notes

= Installation on windows =

== jslint.bat ==
{{{
@java -jar D:\java\rhino1_7R2\js.jar D:\bat\jslint-rhino.js %1
}}}

{{{
// usage
jslint myfile.js
}}}

= Problems =

== Problem at line xx character xx: Read only. ==

 * *問題：*因為想在 closure 內共用 global 的變數，又不確定該 global 變數是否已存在，所以使用以下寫法：
{{{
/*global CONST
*/
(function () {
    CONST = CONST || {};
}());
}}}

 * *解法：*改用內部變數先接 global 變數，最後再丟回給 window
{{{
/*global window
*/
(function () {
    var CONST = window.CONST || {};
    //...
    window.CONST = CONST;
}());
}}}

== array loop ==

 * *問題：* jslint 不准在 loop 語法內直接取 array 長度、各變數又要先定義，所以為了 array loop 得定義多個變數，loop 有兩層就囉唆了
{{{
function array_sum (arr) {
    var i, len = arr.length;
    for (i = 0; i < len; i += 1) {
        // do something
    }
}
}}}

 * *解法：*改用 js framework 的 each() 可解決
{{{
function array_sum (arr) {
    // jQuery 版
    $.each(arr, function (val) {
        // do something
    });

    //YUI 版
    Y.each(arr, function (val) {
        // do something
    });
}
}}}

 * *缺點*：
  * 多了很多的 function call，效能會變差
  * 不適合在 loop 一半會有跳出的情況使用 (應該是吧，因為是 framework 在 loop...)